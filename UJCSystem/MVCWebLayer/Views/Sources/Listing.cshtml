@using ITJakub.MVCWebLayer.Enums
@using Jewelery

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ITJakub.MVCWebLayer.ViewModels.ListSourcesViewModel

@Html.Partial("~/Views/Shared/_SourcesSearchPanel.cshtml")

<div id="main-content">
    <form class="form-inline form-horizontal sources-order">
        <div class="control-group">
            <label class="control-label" for="ViewMode">Procházet podle </label>
            <div class="controls">
                <select id="ViewMode" class="input-small" name="viewType"> 
                    @foreach (var mode in GetSourcesViewModes())
                    {
                        //<option data-url="@Url.RouteUrl("SourcesListing", new { mode = mode.Value, alphabet = ViewContext.RouteData.Values["alphabet"].ToString().ToLower() })" value="@mode.Value" @(string.Equals(ViewContext.RouteData.Values["type"].ToString(), mode.Value, StringComparison.InvariantCultureIgnoreCase) ? "selected=selected" : "")>@mode.Text</option>
                    }
                </select>
            </div>
        </div>
    </form>
    <div class="pagination alphabet">
        <ul>
            @foreach (var alphabetLetter in Model.Alphabet)
            {
                @* If there are no sources for the letter set class of li tag to class=disabled *@
                var active = string.Equals(ViewContext.RouteData.Values["alphabet"].ToString(), @alphabetLetter.Letter, StringComparison.InvariantCultureIgnoreCase);
                var disabled = alphabetLetter.Disabled;
                var liClass = "";
                    
                if (active && disabled)
                {
                    liClass = "active disabled";
                }
                else if (disabled)
                {
                    liClass = "disabled";
                } else if (active)
                {
                    liClass = "active";
                }
                <li@( !liClass.IsEmpty() ? " class=" + liClass : "")>
                    @if (!disabled)
                    {
                        <a href="@Url.RouteUrl("SourcesListing", new {mode = Model.ViewType.ToUrlParam(), alphabet = @alphabetLetter.Letter.ToLower()})">@alphabetLetter.Letter</a>
                    }
                    else
                    {
                        <span>@alphabetLetter.Letter</span>
                    }
                </li>
            }
        </ul>
    </div>

    @foreach (var source in Model.FoundSources)
    {
        <div class="row-fluid">
            <div class="span12 well well-search">
                <h4>@source.Name</h4>
                <span class="author">@source.Author</span><br />
                @*<span class="datation">@source.Datation</span><br />*@
                @*<p>@source.Perex</p>

                <div class="pull-right">
                    <a class="btn" href="@Url.RouteUrl("SourcesDetail", new { id = "1-zizka" })">Detail</a>
                    <a class="btn" href="@Url.RouteUrl("SourcesGoThrough", new { id = "1-zizka", page = 1 })">Procházet</a>
                </div>*@
            </div>    
        </div>
    }

</div>

@functions
{

    IEnumerable<SelectListItem> GetSourcesViewModes()
    {
        var data = Enum.GetValues(typeof(SourcesViewType)).Cast<SourcesViewType>().Select(v => new SelectListItem
        {
            Text = v.GetStringValue(),
            Value = v.ToUrlParam(),
        }).ToList();

        return data;
    }

}