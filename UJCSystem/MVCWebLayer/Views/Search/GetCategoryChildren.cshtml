@using ITJakub.Contracts.Categories
@model ITJakub.MVCWebLayer.ViewModels.CategoriesViewModel 
           
@if (Model.Children.Count() > 0)
{
    var rand = new Random();
    <ul class="nav@(!string.Equals(Model.CategoryId, "taxonomy-historical_text-medieval_czech") ? " show-categories" : "")">
        @foreach (var child in Model.Children)
        {
            Category childAsCat = child as Category;
            if (childAsCat != null)
            {
                <li data-category-id="@childAsCat.Id">
                    @if (childAsCat.HasChildren)
                    {
                        <i class="icon-chevron-right"></i>
                    } else {
                        <i class="icon-chevron-right empty"></i>
                    }
                    <label class="checkbox">
                        <input type="checkbox" name="SearchPart" value="@childAsCat.Id" data-id="@childAsCat.Id" data-type="category" data-name="@UppercaseFirst(childAsCat.Name)" /><span>@UppercaseFirst(childAsCat.Name)</span>
                    </label>
                </li>
            }
            Book childAsBook = child as Book;
            if (childAsBook != null)
            { 
                var randid = rand.Next();
                <li data-book-id="@childAsBook.Id@randid">
                    <label class="checkbox">
                        <input type="checkbox" name="SearchPart" value="@childAsBook.Id@randid" data-id="@childAsBook.Id@randid" data-type="book" data-name="@UppercaseFirst(childAsBook.Name)" /><span>@UppercaseFirst(childAsBook.Name)</span>
                    </label>
                </li>
            }
        }
    </ul>
    if (string.Equals(Model.CategoryId, "taxonomy-historical_text-medieval_czech"))
    {
        <div class="category-select">
            <ul class="nav selected-categories"></ul>
            <form class="form-search">
                <input autocomplete="off" type="text" class="input-xlarge search-query">
                <button type="submit" class="btn"><i class="icon-plus"></i></button>
            </form>
        </div>
    }
}

@functions
{
    string UppercaseFirst(string s)
    {
        if (s == null)
        {
            return string.Empty;
        }
        return char.ToUpper(s[0]) + s.Substring(1);
    }
}





    