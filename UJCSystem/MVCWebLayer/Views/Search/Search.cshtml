@using ITJakub.Contracts.Categories
@using ITJakub.MVCWebLayer.Services
@using ITJakub.MVCWebLayer.ViewModels
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ITJakub.MVCWebLayer.ViewModels.SearchResultViewModel

@Html.Partial("~/Views/Shared/_SearchPanel.cshtml", Model.Search)
    
<br>

<h4>Výsledky hledání:</h4>

<br>

<div class="text-left">
    <strong>Prohledávaná díla: </strong>
    <div class="searched-books">
        <span class="muted">Aktivní prohledávání ve všech dostupných dílech</span>
    </div>
</div>

<div id="created-searched-tree">
    @{
        CategoriesViewModel children = new CategoriesViewModel();
        children.Children = Model.Categories;
    }
    @Html.Partial("~/Views/Search/GetCategoryChildren.cshtml", children)
</div>

<script>
    @if (Model.SelectedCategoryIds != null)
    {
        foreach (var categoryId in Model.SelectedCategoryIds)
        {
            @(new HtmlString("loadedCheckedCategories.push('" + categoryId + "');" + Environment.NewLine))
        }
    }
    @if (Model.SelectedBookIds != null)
    {
        foreach (var bookId in Model.SelectedBookIds)
        {
            @(new HtmlString("loadedCheckedBook.push('" + bookId + "');" + Environment.NewLine))
        }
    }
</script>

<br><br>

<div class="row-fluid">
    <div class="span12" id="search-results-ordering">
        <ul class="nav nav-tabs">
            <li><a href="#search-results-alphabetical" data-toggle="tab" data-result="search-results-alphabetical">Abecedně</a></li>
            <li><a href="#results-type" data-toggle="tab" data-result="results-type">Podle druhu a díla</a></li>
        </ul>
        
        <div class="tab-content">
            <div class="tab-pane active tabs-left" id="search-results-alphabetical">
                <ul class="nav nav-tabs">
                    @foreach (var result in Model.FoundWords)
                    {
                        <li><a data-toggle="tab" href="#@result" class="search-results-alphabetical-result" data-result="@result" data-url="@Url.RouteUrl("SearchDetail", new { searchTerm = result })?Kategorie=@Model.CategoryIds&Dila=@Model.BookIds" >@result</a></li>
                    }
                </ul>   
                <div class="tab-content" id="alphabetical-result-detail">
                    @foreach (var result in Model.FoundWords)
                    {
                        <div class="tab-pane" id="@result"></div>
                    }
                </div>            
            </div>
            <div class="tab-pane tabs-left" id="results-type">
                @if (Model.FoundInBooks != null)
                {
                    foreach (Book book in Model.FoundInBooks)
                    {
                        <ul class="nav nav-tabs">
                            @*<li><h4>@book.Name</h4></li>*@
                            @*@foreach (var category in item.Categories)
                            {
                                <li class="search-item"><a href="#" class="search-results-type-result" data-url="@Url.RouteUrl("SearchDetailType", new { BookId = category.id })?Kategorie=@Model.CategoryIds&Dila=@Model.BookIds">@category.name</a></li>
                            }*@
                        </ul>
                    }
                }
                <ul class="nav nav-tabs">
                    @if (Model.FoundInBooks != null)
                    {
                        foreach (var categoryCombination in Model.GetAllCategoryCombinations())
                        {
                            <li><h4>@categoryCombination</h4></li>
                            foreach (Book book in Model.GetBooksByCategoryCombination(categoryCombination))
                            {
                                <li class="search-item"><a data-toggle="tab" href="#@book.Id" class="search-results-type-result" data-result="@book.Id" data-url="@Url.RouteUrl("SearchDetailType", new { BookId = @book.Id })?Kategorie=@Model.CategoryIds&Dila=@Model.BookIds">@book.Name</a></li>
                            }
                        }
                    }
                </ul>
                @if (Model.FoundInBooks != null)
                {
                    <div class="tab-content" id="type-result-detail">
                   @foreach (var categoryCombination in Model.GetAllCategoryCombinations())
                    {
                            foreach (var book in Model.GetBooksByCategoryCombination(categoryCombination))
                            {
                                <div class="tab-pane" id="@book.Id"></div>
                            }
                    }
                    </div>  
                }
                @*<div class="tab-content" id="type-result-detail">
                    <div class="tab-pane" id="ss1"></div>
                    <div class="tab-pane" id="ss2"></div>
                    <div class="tab-pane" id="ss3"></div>
                    <div class="tab-pane" id="ss4"></div>
                </div> *@        
            </div>
        </div>
    </div>
</div>


