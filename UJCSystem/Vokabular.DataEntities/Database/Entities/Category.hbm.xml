<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="Vokabular.DataEntities" namespace="Vokabular.DataEntities.Database.Entities" xmlns="urn:nhibernate-mapping-2.2">
  <class name="Category" table="[Category]" >
    
    <id name="Id" column="Id">
      <generator class="identity" />
    </id>
    
    <property name="ExternalId" not-null="false" />
    
    <property name="Description" not-null="false" />

    <property name="Path" not-null="true" />

    <many-to-one name="ParentCategory" class="Category" lazy="proxy" />

    <bag name="Categories" inverse="true" cascade="none">
      <key column="ParentCategory" />
      <one-to-many class="Category" />
    </bag>

    <bag name="Projects" table="Project_Category" inverse="true" lazy="true">
      <key column="Category" />
      <many-to-many class="Project" column="Project" />
    </bag>

    <!--<bag name="FavoriteItems" inverse="true" cascade="none" lazy="true">
      <key column="Category" />
      <one-to-many class="FavoriteCategory" />
    </bag>-->
  </class>

  <sql-query name="GetCategoryHierarchy">
    <![CDATA[
      select distinct(c2.Id)
      from Category c1
      join Category c2 on c2.Path like (c1.Path + '%')
      where c1.Id in (:categoryIds)
    ]]>
  </sql-query>
  
  <sql-query name="GetBookIdsFromCategoryHierarchy">
    <![CDATA[
      select distinct(b.Id)
      from Category c1
      join Category c2 on c2.Path like (c1.Path + '%')
      join BookVersion_Category bvc on c2.Id = bvc.Category
      join BookVersion bv on bvc.BookVersion = bv.Id
	    join Book b on bv.Id = b.LastVersion
      where c1.Id in (:categoryIds)
    ]]>
  </sql-query>
</hibernate-mapping>