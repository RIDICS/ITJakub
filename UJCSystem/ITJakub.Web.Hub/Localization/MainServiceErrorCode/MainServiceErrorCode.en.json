{
  "culture": "en",
  "scope": "MainServiceErrorCode",
  "dictionary": {
    //Main service codes
    "entity-not-found": "The entity was not found",
    "headword-not-found": "The headword was not found",
    "category-has-sub-categories": "Category has some sub-categories",
    "repository-contains-history": "The external repository cannot be deleted, because it contains history",
    "comments-to-second-level": "Only comments to second level are allowed",
    "edition-note-conflict": "Could not save an edition note. The edition note was changed by another user.",
    "resource-version-id-null": "resourceVersionId can't be null for HeadwordFeedback",
    "cannot-move-category-to-subcategory": "Can't move category into it's own subcategories",
    "unallowed-authorization-criteria":
      "Search criteria contains unallowed Authorization criteria. Authorization criteria is generated automatically.",
    "unregistered-user-cardfile-access-forbidden": "Unregistered user does not have permission to read  this cardfile",
    "unregistered-user-book-access-forbidden": "Unregistered user does not have permission on this book",
    "unregistered-user-resource-access-forbidden":
      "Unregistered user does not have permission on the book with this resource",
    "user-cardfile-access-forbidden": "You do not have permission to read this cardfile",
    "user-book-access-forbidden": "You do not have permission on this book",
    "user-resource-access-forbidden": "You do not have permission on the book with this resource",
    "project-id-or-resource-id": "Exactly one parameter (ProjectId or ResourceId) has to be specified",
    "create-anonymous-feedback": "If a user is not signed in, it is required to create anonymous feedback",
    "user-has-missing-external-id": "User with ID {0} has missing ExternalID",
    "cannot-locate-user": "Cannot locate user with ID '{0}'",
    "no-supported-search": "No supported search criteria was specified",
    "null-book-type-not-supported": "It is not set the valid book type",
    "import-failed": "Import failed",
    "import-failed-with-error": "Import failed. {0}",
    "import-succeed-forum-failed": "Import succeeded. Forum creation failed. {0}",
    "project-not-exist": "The project does not exist.",
    "forum-already-created": "The forum is already created.",
    "cannot-remove-default-favorite-label": "Can't remove default favorite label",
    "cannot-modify-default-favorite-label": "User can't modify default favorite label",
    "favorite-label-not-found": "Favorite label not found",
    "user-does-not-own-label": "Current user doesn't own this FavoriteLabel",
    "page-not-found": "Page with ID {0} not found",
    "item-not-found": "Item not found",
    "not-supported-criteria-key": "Not supported criteria key: {0}",
    "missing-fulltext-criteria": "Missing any fulltext criteria",
    "delete-resource-project-relation": "Could not delete resource. Existing relation to Project?",
    "delete-resource-page-relation": "Could not delete resource. Existing relation to resource Page?",
    "add-user-to-default-role": "Users cannot be added to the default group {0}.",
    "rename-default-role": "The name of the default group {0} cannot be changed.",
    "delete-default-role": "The default group {0} cannot be deleted.",
    "resource-modified": "Could not save a resource. The resource was changed by another user.",
    "user-has-not-permission-to-manipulate": "You don't have permission manipulate with specified item.",
    "repository-import-manager-not-found": "The import manager was not found for repository type {0}.",
    "repository-import-cancelled": "Import from repository {0} was canceled.",
    "repository-import-failed": "An unexpected error occurred while importing bibliographic data from database {0}",
    "oai-pmh-communication-error": "Error while requesting: {0}. {1} : {2}",
    "oai-pmh-communication-failed": "Error while requesting: {0}.",
    "project-parser-not-found": "The project parser was not found for bibliographic format {0}.",
    "change-in-conflict": "Could not save your changes because a conflict changes have already been made by another user.",

    //Auth service codes
    "generic-error": "Operation failed",
    "user-not-exist-id": "User with given identifier does not exist",
    "user-not-exist-username": "User with given username does not exist",
    "user-not-exist-email": "User with given e-mail does not exist",
    "user-not-exist-verification-code": "User with given verification code does not exist",
    "user-not-exist-external-login": "User with given external identity does not exist",
    "user-not-exist-phone": "User with the given phone number does not exist",
    "user-not-exist-user-data": "User with given data does not exist",
    "create-user-error-generate-verification-code": "Failed to create user due to generation of verification code",
    "create-user-error": "Failed to create user",
    "create-user-error-user-data": "Failed to create user due to invalid entered data",
    "create-user-error-user-contact-email":
      "Failed to create user since entered e-mail address is already in use",
    "create-user-error-user-contact-phone":
      "Failed to create user since entered phone number is already in use",
    "create-user-error-user-contact-email-not-valid": "Failed to create user due to invalid e-mail address",
    "create-user-error-user-contact-phone-not-valid":
      "Failed to create user due to invalid phone number (phone number has to contain country code and start with a plus sign)",
    "create-user-error-external-identity": "Failed to create user due to an external account",
    "generate-verification-code": "Failed to generate verification code",
    "generate-username": "Failed to generate username",
    "role-not-exist-name": "Group with given name does not exist",
    "role-not-exist-id": "Group with given identifier does not exist",
    "user-data-invalid-type": "User data with given type does not exist",
    "client-not-exist-id": "Client with given identifier does not exist",
    "uri-nox-exist-id": "Uri with given identifier does not exist",
    "api-resource-not-exist-id": "API resource with given identifier does not exist",
    "secret-not-exist-id": "Secret with given identifier does not exist",
    "permission-not-exist-id": "Permission with given identifier does not exist",
    "resource-not-exist-id": "Resource with given identifier does not exist",
    "claim-type-not-exist-id": "Claim type with given identifier does not exist",
    "claim-type-enum-not-exist-id": "Claim type enum with given identifier does not exist",
    "claim-nothing-to-remove": "No claim to remove",
    "api-resource-not-exist-name": "API resource with given name does not exist",
    "file-not-exist-id": "File with given identifier does not exist",
    "two-factor-validation-error": "Two-factor verification validation failed",
    "insurance-number-not-unique": "Insurance number is already in use",
    "password-mismatch": "Wrong password",
    "email-not-valid": "Invalid e-mail address",
    "phone-not-valid":
      "Invalid phone number (phone number has to contain country code and start with a plus sign)",
    "save-user-error-user-contact-email-not-valid": "Failed to save user due to invalid e-mail address",
    "save-user-error-user-contact-phone-not-valid":
      "Failed to save user due to invalid phone number (phone number has to contain country code and start with a plus sign)",
    "save-user-error-user-contact-email": "Failed to save user since entered e-mail address is already in use",
    "save-user-error-user-contact-phone":
      "Failed to save user since entered phone number is already in use",
    "email-not-unique": "E-mail address is already in use",
    "phone-not-unique": "Phone number is already in use",
    "generate-password": "Failed to generate password",
    //Code generated by identity during password change
    "PasswordMismatch": "Invalid password",
    //Auth service status codes
    "bad-request-code-400":
      "There was a problem communicating with a third party service. Third party service returned status: 400 Bad request",
    "unauthorized-code-401":
      "There was a problem communicating with a third party service. Third party service returned status: 401 Unauthorized",
    "forbidden-code-403":
      "There was a problem communicating with a third party service. Third party service returned status: 403 Forbidden",
    "not-found-code-404":
      "There was a problem communicating with a third party service. Third party service returned status: 404 Not found",
    "internal-server-error-code-500":
      "There was a problem communicating with a third party service. Third party service returned status: 500 Internal server error",
    "bad-gateway-code-502":
      "There was a problem communicating with a third party service. Third party service returned status: 502 Gateway error",
    "gateway-timeout-code-504":
      "There was a problem communicating with a third party service. Third party service returned status: 504 Gateway timeout"
  }
}