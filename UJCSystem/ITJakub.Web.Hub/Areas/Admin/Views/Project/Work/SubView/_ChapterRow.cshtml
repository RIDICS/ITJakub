@using Scalesoft.Localization.AspNetCore
@model Vokabular.MainService.DataContracts.Contracts.ChapterHierarchyContract
@inject ILocalizationService Localizer

@{
    int levelOfHierarchy = (int)ViewData["levelOfHierarchy"];
}
<div class="chapter-container">
    <div class="chapter-row" data-chapter-id="@Model.Id" data-page-id="@Model.BeginningPageId" data-position="@Model.Position" data-level="@levelOfHierarchy">
        <div class="ridics-checkbox" style="margin-left: @(levelOfHierarchy)em">
            <label>
                <input type="checkbox" class="selection-checkbox" />
                <span class="cr cr-black">
                    <i class="cr-icon glyphicon glyphicon-ok"></i>
                </span>
            </label>
        </div>
        <div class="name">
            <div>
                <input type="text" name="page-name" class="form-control hide" value="@Model.Name" />
                @Model.Name
            </div>
            <div class="alert alert-danger"></div>
        </div>
        <div class="buttons">
            [@Model.BeginningPageId]
            <a class="edit-page btn btn-sm btn-default" title="@Localizer.Translate("EditPageName", "RidicsProject")">
                <i class="fa fa-pencil"></i>
            </a>
            <a class="remove-page btn btn-sm btn-default" title="@Localizer.Translate("DeletePage", "RidicsProject")">
                <i class="fa fa-trash"></i>
            </a>
        </div>
    </div>

    @if (Model.SubChapters.Count > 0)
    {
        <div class="sub-chapters">
            @{
                levelOfHierarchy++;
                ViewData["levelOfHierarchy"] = levelOfHierarchy;
                foreach (var chapter in Model.SubChapters)
                {
                    @await Html.PartialAsync("Work/SubView/_ChapterRow", chapter, ViewData)
                }
                levelOfHierarchy--;
                ViewData["levelOfHierarchy"] = levelOfHierarchy;
            }
        </div>
    }
</div>
