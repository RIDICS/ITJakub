@using Scalesoft.Localization.AspNetCore
@using Scalesoft.Localization.Core.Util
@model IList<Vokabular.MainService.DataContracts.Contracts.ExternalRepositoryContract>

@inject ILocalizationService Localizer
@inject IRazorLocalizationService RazorLocalizer

@{
    ViewBag.Title = Localizer.Translate("ExternalRepositoriesTitle", "RepositoryImport", LocTranslationSource.File);
}

@section styles {
    <link asp-append-version="true" rel="stylesheet" href="~/Areas/RepositoryImport/css/ridics.repositoryImport.css" />
}

@section scripts {
    <script asp-append-version="true" src="~/js/ridics.web-hub-api-client.js" type="text/javascript"></script>
    <script asp-append-version="true" src="~/Areas/RepositoryImport/js/ridics.repository-import-api-client.js" type="text/javascript"></script>
    <script asp-append-version="true" src="~/Areas/RepositoryImport/js/ridics.external-repository-configuration.js" type="text/javascript"></script>
}

<div class="content-container">
    <div class="row project-import-layout">
        @await Html.PartialAsync("~/Areas/RepositoryImport/Views/_LeftMenu.cshtml")

        <div class="content content-list" id="project-import-layout-content">
            <div class="col-xs-12 float-none">
                <h2>@Localizer.Translate("ExternalRepositoryList", "RepositoryImport", LocTranslationSource.File)</h2>
            </div>
            <div class="col-xs-12 right-align-btn">
                <a class="btn btn-default" href="@Url.Action("Create", "ExternalRepository", new {area = "RepositoryImport"})">
                    @Localizer.Translate("CreateRepository", "RepositoryImport", LocTranslationSource.File)
                </a>
            </div>

            @if (Model.Count == 0)
            {
                <div class="col-xs-12">
                    <div class="alert alert-info">
                        <i class="fa fa-info-circle"></i>
                        @RazorLocalizer.TranslateFormat(
                            "EmptyExternalRepositoryList",
                            "RepositoryImport",
                            Html.ActionLink(
                                Localizer.Translate("Here", "RepositoryImport").ToString(),
                                "Create",
                                "ExternalRepository")
                            )
                    </div>
                </div>
            }
            else
            {
                <ul class="bib-listing">
                    @foreach (var repository in Model)
                    {
                        <li class="list-item">
                            <div class="visible-content">
                                <div class="visible-wrapper">
                                    <div class="left-panel"></div>
                                    <div class="middle-panel">
                                        <div class="heading">@repository.Name</div>
                                        <div class="body">
                                            @repository.Description
                                            <div>
                                                <div class="body-title">@Localizer.Translate("RepositoryType", "RepositoryImport")</div>
                                                @repository.ExternalRepositoryType.Name
                                            </div>
                                            <div>
                                                <div class="body-title">@Localizer.Translate("BibliographicFormat", "RepositoryImport")</div>
                                                @repository.BibliographicFormat.Name
                                            </div>
                                            <div>
                                                <div class="body-title">@Localizer.Translate("License", "RepositoryImport")</div>
                                                @repository.License
                                            </div>
                                        </div>
                                    </div>
                                    <div class="right-panel">
                                        <a class="btn btn-sm book-button button" href="@Url.Action("Update", "ExternalRepository", new {area = "RepositoryImport", id = repository.Id})">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </a>
                                        <a type="button" class="btn btn-sm information-button button" href="@Url.Action("Delete", "ExternalRepository", new {area = "RepositoryImport", id = repository.Id})">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </a>
                                        <button type="button" class="btn btn-sm content-button repository-detail" data-toggle="collapse" aria-expanded="false" data-target="#repository-@repository.Id">
                                            <span class="glyphicon glyphicon-chevron-down" data-repository-id="@repository.Id"></span>
                                            <span class="glyphicon glyphicon-chevron-up"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="hidden-content collapse" id="repository-@repository.Id">
                                <div class="bottom-panel">
                                    <div class="body">
                                        <div class="bib-table">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>