@using Localization.AspNetCore.Service
@using Microsoft.AspNetCore.Http.Extensions

@inject ILocalization Localizer

@{
    var requestUrl = Context.Request.GetDisplayUrl();
    var pathAndQuery = new Uri(requestUrl).PathAndQuery;
}

<div class="secondary-navbar-toggle language" title="Jazyk">
    <span class="glyphicon glyphicon-text-background"></span>
    <ul class="navbar-language">
        @foreach (var x in Localizer.SupportedCultures())
        {
            <li>
                @Html.ActionLink(x.NativeName, "SetLanguage", "Localization", new { area = "", culture = x.Name, returnUrl = pathAndQuery })
            </li>
        }
    </ul>
</div>

<div class="secondary-navbar-toggle login" title="Uživatelský účet">
    <span class="glyphicon glyphicon-user"></span>
    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("LogOut", "Account", new { area = "" }, FormMethod.Post, true, new { id = "logoutForm", @class = "navbar-right" }))
        {

            <ul class="navbar-login">
                <li><a href="#">@Html.Raw(User.Identity.Name)</a></li>
                <li><a href="javascript:document.getElementById('logoutForm').submit()">@Localizer.Translate("LogOut")</a></li>
            </ul>
        }
    }
    else
    {
        if (!string.IsNullOrEmpty(pathAndQuery) && pathAndQuery != "/" && !pathAndQuery.StartsWith("/Account/"))
        {
            ViewBag.ReturnUrl = pathAndQuery;
        }
        <ul class="navbar-login">
            <li>@Html.ActionLink("Přihlášení", "Login", "Account", new { area = "", returnUrl = ViewBag.ReturnUrl }, new { id = "loginLink" })</li>
            <li>@Html.ActionLink("Registace", "Register", "Account", new { area = "" }, new { id = "registerLink" })</li>
        </ul>
    }
</div>

