@using ITJakub.Web.Hub.Options
@using Microsoft.Extensions.Options
@using Ridics.Core.Structures.Shared
@using Vokabular.Shared.AspNetCore.Extensions
@using Vokabular.Shared.Const
@using Scalesoft.Localization.AspNetCore
@using Scalesoft.Localization.Core.Util

@inject ILocalizationService Localizer
@inject IOptions<PortalOption> PortalConfig

@{ var portalType = PortalConfig.Value.PortalType; }

@if (User.Identity.IsAuthenticated)
{
    <li id="admin-menu" class="has-sub last">
        @if (User.HasPermission(VokabularPermissionNames.UploadBook) && portalType == PortalType.ResearchPortal)
        {
            <a href='@Url.Action("Upload", "Upload", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.EditLemmatization) && portalType == PortalType.ResearchPortal)
        {
            <a href="@Url.Action("Index", "Lemmatization", new {area = "Lemmatization"})">
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.ReadLemmatization) && portalType == PortalType.ResearchPortal)
        {
            <a href="@Url.Action("List", "Lemmatization", new {area = "Lemmatization"})">
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.DerivateLemmatization) && portalType == PortalType.ResearchPortal)
        {
            <a href="@Url.Action("Index", "Derivation", new {area = "Derivation"})">
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(PermissionNames.ListUsers))
        {
            <a href='@Url.Action("UserPermission", "Permission", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(PermissionNames.ManageUserRoles))
        {
            <a href='@Url.Action("RolePermission", "Permission", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.ManageFeedbacks))
        {
            <a href='@Url.Action("Feedback", "Feedback", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.AddNews))
        {
            <a href='@Url.Action("Add", "News", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else if (User.HasPermission(VokabularPermissionNames.ManageBibliographyImport) && portalType == PortalType.ResearchPortal)
        {
            <a href='@Url.Action("List", "ExternalRepository", new {area = "RepositoryImport"})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        else
        {
            <a href='@Url.Action("Management", "Favorite", new {area = ""})'>
                <span>@Localizer.Translate("Administration", "layout", LocTranslationSource.File)</span>
            </a>
        }
        <ul>
            @if (User.HasPermission(VokabularPermissionNames.UploadBook) && portalType == PortalType.ResearchPortal)
            {
                <li>
                    <a href='@Url.Action("Upload", "Upload", new {area = ""})'>
                        <span>@Localizer.Translate("UploadWork", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if ((User.HasPermission(VokabularPermissionNames.ReadLemmatization) || User.HasPermission(VokabularPermissionNames.EditLemmatization)) && portalType == PortalType.ResearchPortal)
            {
                <li>
                    <a href="@Url.Action("Index", "Lemmatization", new {area = "Lemmatization"})">
                        <span>@Localizer.Translate("Lemmatisation", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
                <li>
                    <a href="@Url.Action("List", "Lemmatization", new {area = "Lemmatization"})">
                        <span>@Localizer.Translate("LemmatisationWalkthrough", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(VokabularPermissionNames.DerivateLemmatization) && portalType == PortalType.ResearchPortal)
            {
                <li>
                    <a href="@Url.Action("Index", "Derivation", new {area = "Derivation"})">
                        <span>@Localizer.Translate("Derivation", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(PermissionNames.ListUsers))
            {
                <li>
                    <a href='@Url.Action("UserPermission", "Permission", new {area = ""})'>
                        <span>@Localizer.Translate("UserManagement", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(PermissionNames.ManageUserRoles))
            {
                <li>
                    <a href='@Url.Action("RolePermission", "Permission", new {area = ""})'>
                        <span>@Localizer.Translate("GroupManagement", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(PermissionNames.ManageUserRoles))
            {
                <li>
                    <a href='@Url.Action("ProjectPermission", "Permission", new {area = ""})'>
                        <span>@Localizer.Translate("BookPermissionManagement", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(VokabularPermissionNames.ManageFeedbacks))
            {
                <li>
                    <a href='@Url.Action("Feedback", "Feedback", new {area = ""})'>
                        <span>@Localizer.Translate("FeedbackManagement", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            <li>
                <a href='@Url.Action("Management", "Favorite", new {area = ""})'>
                    <span>@Localizer.Translate("FavoriteItems", "layout", LocTranslationSource.File)</span>
                </a>
            </li>

            @if (User.HasPermission(VokabularPermissionNames.AddNews))
            {
                <li>
                    <a href='@Url.Action("Add", "News", new {area = ""})'>
                        <span>@Localizer.Translate("AddNews", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(VokabularPermissionNames.ManageBibliographyImport) && portalType == PortalType.ResearchPortal)
            {
                <li>
                    <a href='@Url.Action("List", "RepositoryImport", new {area = "RepositoryImport"})'>
                        <span>@Localizer.Translate("RepositoryImport", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

            @if (User.HasPermission(VokabularPermissionNames.ManageCodeList))
            {
                <li>
                    <a href='@Url.Action("KeyTable", "KeyTable", new {area = "Admin"})'>
                        <span>@Localizer.Translate("CodeLists", "layout", LocTranslationSource.File)</span>
                    </a>
                </li>
            }

        </ul>
    </li>
}