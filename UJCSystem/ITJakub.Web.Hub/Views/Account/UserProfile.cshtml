@using ITJakub.Web.Hub.Constants
@using Scalesoft.Localization.AspNetCore
@model ITJakub.Web.Hub.Models.User.AccountDetailViewModel

@inject ILocalizationService Localizer
@section styles {
    <link asp-append-version="true" href="~/css/ridics.account.css" rel="stylesheet" />
}
@section scripts {
    <script asp-append-version="true" src="~/js/ridics.web-hub-api-client.js"></script>
    <script asp-append-version="true" src="~/js/ridics.account-api-client.js"></script>
    <script asp-append-version="true" src="~/js/ridics.account.js"></script>
}
@{
    ViewBag.Title = Localizer.Translate("UserProfile", "Account");
}
<div id="userId" class="hide" data-id="@Model.UpdateUserViewModel.Id"></div>
<div class="content-container top-offset-without-submenu">
    <h2>@ViewBag.Title</h2>
    <ul class="nav nav-tabs" role="tablist" id="project-work-tabs">
        <li role="presentation" @(Model.ActualTab == AccountTab.UpdateAccount ? "class=active" : string.Empty)>
            <a href="#updateAccount" data-toggle="tab" role="tab">@Localizer.Translate("BasicData", "Account")</a>
        </li>
        <li role="presentation" @(Model.ActualTab == AccountTab.UpdatePassword ? "class=active" : string.Empty)>
            <a href="#updatePassword" data-toggle="tab" role="tab">@Localizer.Translate("PasswordChange", "Account")</a>
        </li>
        <li role="presentation" @(Model.ActualTab == AccountTab.UpdateContact ? "class=active" : string.Empty)>
            <a href="#updateContact" data-toggle="tab" role="tab">@Localizer.Translate("UpdateContact", "Account")</a>
        </li>
        <li role="presentation" @(Model.ActualTab == AccountTab.UpdateTwoFactorVerification ? "class=active" : string.Empty)>
            <a href="#updateTwoFactorVerification" id="updateTwoFactorVerificationButton" data-toggle="tab" role="tab">@Localizer.Translate("UpdateTwoFactorVerification", "Account")</a>
        </li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane @(Model.ActualTab == AccountTab.UpdateAccount ? "active" : string.Empty)" id="updateAccount">
            @await Html.PartialAsync("UserProfile/_UpdateBasicData", Model.UpdateUserViewModel)
        </div>
        <div role="tabpanel" class="tab-pane @(Model.ActualTab == AccountTab.UpdatePassword ? "active" : string.Empty)" id="updatePassword">
            @await Html.PartialAsync("UserProfile/_UpdatePassword", Model.UpdatePasswordViewModel)
        </div>
        <div role="tabpanel" class="tab-pane @(Model.ActualTab == AccountTab.UpdateContact ? "active" : string.Empty)" id="updateContact">
            @await Html.PartialAsync("UserProfile/_UpdateContact", Model.UpdateContactViewModel)
        </div>
        <div role="tabpanel" class="tab-pane @(Model.ActualTab == AccountTab.UpdateTwoFactorVerification ? "active" : string.Empty)" id="updateTwoFactorVerification">
            @await Html.PartialAsync("UserProfile/_UpdateTwoFactorVerification", Model.UpdateTwoFactorVerificationViewModel)
        </div>
    </div>
</div>