//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocProjectStorageWeb.AccountsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AuthService.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pwhashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pwhash {
            get {
                return this.pwhashField;
            }
            set {
                if ((object.ReferenceEquals(this.pwhashField, value) != true)) {
                    this.pwhashField = value;
                    this.RaisePropertyChanged("pwhash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountsServiceReference.IAccountsService")]
    public interface IAccountsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetAllUsers", ReplyAction="http://tempuri.org/IAccountsService/GetAllUsersResponse")]
        DocProjectStorageWeb.AccountsServiceReference.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetAllUsers", ReplyAction="http://tempuri.org/IAccountsService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/Authenticate", ReplyAction="http://tempuri.org/IAccountsService/AuthenticateResponse")]
        bool Authenticate(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/Authenticate", ReplyAction="http://tempuri.org/IAccountsService/AuthenticateResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/HasRole", ReplyAction="http://tempuri.org/IAccountsService/HasRoleResponse")]
        bool HasRole(DocProjectStorageWeb.AccountsServiceReference.User user, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/HasRole", ReplyAction="http://tempuri.org/IAccountsService/HasRoleResponse")]
        System.Threading.Tasks.Task<bool> HasRoleAsync(DocProjectStorageWeb.AccountsServiceReference.User user, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserNameByEmail", ReplyAction="http://tempuri.org/IAccountsService/GetUserNameByEmailResponse")]
        string GetUserNameByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserNameByEmail", ReplyAction="http://tempuri.org/IAccountsService/GetUserNameByEmailResponse")]
        System.Threading.Tasks.Task<string> GetUserNameByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AddUser", ReplyAction="http://tempuri.org/IAccountsService/AddUserResponse")]
        void AddUser(DocProjectStorageWeb.AccountsServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AddUser", ReplyAction="http://tempuri.org/IAccountsService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(DocProjectStorageWeb.AccountsServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/RemoveUser", ReplyAction="http://tempuri.org/IAccountsService/RemoveUserResponse")]
        void RemoveUser(DocProjectStorageWeb.AccountsServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/RemoveUser", ReplyAction="http://tempuri.org/IAccountsService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(DocProjectStorageWeb.AccountsServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/SaveContextChanges", ReplyAction="http://tempuri.org/IAccountsService/SaveContextChangesResponse")]
        void SaveContextChanges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/SaveContextChanges", ReplyAction="http://tempuri.org/IAccountsService/SaveContextChangesResponse")]
        System.Threading.Tasks.Task SaveContextChangesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserById", ReplyAction="http://tempuri.org/IAccountsService/GetUserByIdResponse")]
        DocProjectStorageWeb.AccountsServiceReference.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserById", ReplyAction="http://tempuri.org/IAccountsService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserByEmail", ReplyAction="http://tempuri.org/IAccountsService/GetUserByEmailResponse")]
        DocProjectStorageWeb.AccountsServiceReference.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetUserByEmail", ReplyAction="http://tempuri.org/IAccountsService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User> GetUserByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountsServiceChannel : DocProjectStorageWeb.AccountsServiceReference.IAccountsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountsServiceClient : System.ServiceModel.ClientBase<DocProjectStorageWeb.AccountsServiceReference.IAccountsService>, DocProjectStorageWeb.AccountsServiceReference.IAccountsService {
        
        public AccountsServiceClient() {
        }
        
        public AccountsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DocProjectStorageWeb.AccountsServiceReference.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public bool Authenticate(string email, string password) {
            return base.Channel.Authenticate(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateAsync(string email, string password) {
            return base.Channel.AuthenticateAsync(email, password);
        }
        
        public bool HasRole(DocProjectStorageWeb.AccountsServiceReference.User user, string role) {
            return base.Channel.HasRole(user, role);
        }
        
        public System.Threading.Tasks.Task<bool> HasRoleAsync(DocProjectStorageWeb.AccountsServiceReference.User user, string role) {
            return base.Channel.HasRoleAsync(user, role);
        }
        
        public string GetUserNameByEmail(string email) {
            return base.Channel.GetUserNameByEmail(email);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameByEmailAsync(string email) {
            return base.Channel.GetUserNameByEmailAsync(email);
        }
        
        public void AddUser(DocProjectStorageWeb.AccountsServiceReference.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(DocProjectStorageWeb.AccountsServiceReference.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void RemoveUser(DocProjectStorageWeb.AccountsServiceReference.User user) {
            base.Channel.RemoveUser(user);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(DocProjectStorageWeb.AccountsServiceReference.User user) {
            return base.Channel.RemoveUserAsync(user);
        }
        
        public void SaveContextChanges() {
            base.Channel.SaveContextChanges();
        }
        
        public System.Threading.Tasks.Task SaveContextChangesAsync() {
            return base.Channel.SaveContextChangesAsync();
        }
        
        public DocProjectStorageWeb.AccountsServiceReference.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public DocProjectStorageWeb.AccountsServiceReference.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<DocProjectStorageWeb.AccountsServiceReference.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
    }
}
